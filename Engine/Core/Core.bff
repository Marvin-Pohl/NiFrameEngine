{
	.ProjectName = "Core"
	.ProjectPath= "Engine/Core"
	.PCHName = "NFEnginePCH"

	{
		.UnityInputPath = "$ProjectPath$\src"
		.UnityOutputPath = "$OutputBasePath$\Unity\$ProjectPath$\"

		Unity( "$ProjectName$-Unity-Windows" )
		{
			.UnityPCH = "$PCHName$.hpp"
		}
	}

	// Windows (MSVC)
	//--------------------------------------------------------------------------
	ForEach( .MSVCConfig in .Configs_Windows_MSVC )
	{
		Using( .MSVCConfig )
		.OutputBasePath + '\$Platform$-$Config$'

		// Static Library
		Library( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
			// Precompiled Header Creation/Use
			.PCHInputFile = '$ProjectPath$\src\$PCHName$.cpp'
			.PCHOutputFile = '$OutputBasePath$\$ProjectName$\$PCHName$.pch'
			.PCHOptions + ' /Yc"$PCHName$.hpp"'
			.CompilerOptions + ' /Yu"$PCHName$.hpp" /Fp"$PCHOutputFile$"'
				+ ' /D"NIFRAME_DLL_BUILD"'
			.PCHOptions + ' /D"NIFRAME_DLL_BUILD"'

			// Input (Unity)
			.CompilerInputUnity = '$ProjectName$-Unity-Windows'

			// Output
			.CompilerOutputPath = '$OutputBasePath$\$ProjectName$\'
			.LibrarianOutput = '$OutputBasePath$\$ProjectName$\$ProjectName$.lib'
		}

		DLL( "$ProjectName$-DLL-$Platform$-$Config$" )
		{
			.Libraries = { "$ProjectName$-Lib-$Platform$-$Config$" }
			.LinkerOutput = "$OutputBasePath$\$ProjectName$\$ProjectName$.dll"
			.LinkerOptions + " /SUBSYSTEM:CONSOLE"
				+ " /DLL"
				+ " User32.lib"
		}
	}

	
}